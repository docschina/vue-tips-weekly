import{_ as e,c as s,o as n,a}from"./app.2c680187.js";const D=JSON.parse('{"title":"\u{1F525} (#73) Nuxt Content Queries","description":"","frontmatter":{"title":"\u{1F525} (#73) Nuxt Content Queries","head":[["link",{"rel":"canonical","href":"https://michaelnthiessen.com/weekly-073-august-10/"}]]},"headers":[{"level":2,"title":"\u{1F525} Start with the Interface","slug":"\u{1F525}-start-with-the-interface"},{"level":2,"title":"\u{1F525} Nuxt Content Queries","slug":"\u{1F525}-nuxt-content-queries"},{"level":2,"title":"\u{1F4DC} The 101 guide to Script Setup in Vue 3","slug":"\u{1F4DC}-the-101-guide-to-script-setup-in-vue-3"},{"level":2,"title":"\u{1F4AC} The absence of bugs","slug":"\u{1F4AC}-the-absence-of-bugs"},{"level":2,"title":"\u{1F9E0} Spaced-repetition: My favourite git commands","slug":"\u{1F9E0}-spaced-repetition-my-favourite-git-commands"},{"level":2,"title":"\u6765\u6E90","slug":"\u6765\u6E90"}],"relativePath":"073.md"}'),t={name:"073.md"},o=a(`<h1 id="\u{1F525}-73-nuxt-content-queries" tabindex="-1">\u{1F525} (#73) Nuxt Content Queries <a class="header-anchor" href="#\u{1F525}-73-nuxt-content-queries" aria-hidden="true">#</a></h1><p>August 2022</p><p>Hey there!</p><p>This summer has been a busy one for me, but I&#39;m finally done with all the weddings and travelling.</p><p>Now I have time to really focus on producing more Vue content for you.</p><p>I&#39;ve got some exciting things coming in the next few months \u2014it&#39;s going to be epic!</p><p>I can&#39;t really say more than that now.</p><p>Yes, I&#39;m slowly working through an update for Clean Components. But this is an opportunity for a project that came up recently, and I just couldn&#39;t say no.</p><p>(You&#39;ll have to wait to find out why)</p><p>But for now, I&#39;ve got some more Vue tips for you.</p><p>\u2014Michael</p><p><em>p.s. If you love these newsletters I send out, please share it with a co-worker or friend who you think will also enjoy it! Thanks!</em></p><h2 id="\u{1F525}-start-with-the-interface" tabindex="-1">\u{1F525} Start with the Interface <a class="header-anchor" href="#\u{1F525}-start-with-the-interface" aria-hidden="true">#</a></h2><p>When writing a composable, don\u2019t immediately dive into implementing it.</p><p>Instead, take a moment to figure out how you will be using the component. Take some time to think about the interface between the composable and the rest of your app.</p><p>A few minutes upfront can save you a lot of tears and frustration later on.</p><p>Here are a few questions you may want to ask yourself before starting:</p><ol><li>What arguments should the composable receive?</li><li>What options do we want to include?</li><li>What does the composable return?</li><li>Do we want to use dynamic return values here?</li><li>What does the minimum useful version look like, and how quickly can we get there?</li><li>What does the<em>final</em>version look like? Is there anything easy we can do now to prepare for that?</li></ol><p>Of course, your composable will change and evolve over time.</p><p>But it\u2019s much easier to start off heading in the right direction.</p><h2 id="\u{1F525}-nuxt-content-queries" tabindex="-1">\u{1F525} Nuxt Content Queries <a class="header-anchor" href="#\u{1F525}-nuxt-content-queries" aria-hidden="true">#</a></h2><p>Nuxt Content 2 gives us an effortless way to query our content using the <code>queryContent</code> method:</p><div class="language-javascript"><span class="copy"></span><pre><code><span class="line"><span style="color:#676E95;font-style:italic;">// composables/useArticles.js</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#82AAFF;">queryContent</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">articles</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">where</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// Optional fields that may be true or non-existent</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">ghost</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">$ne</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">newsletter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">$ne</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;">// Don&#39;t render articles scheduled for the future</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">date</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">$lte</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Date</span><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">only</span><span style="color:#A6ACCD;">([</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">path</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">description</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">date</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">tags</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sort</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">date</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">find</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>Here, I\u2019ve created a composable called <code>useArticles</code> for my blog, which grabs all of the content inside of the <code>content/articles/</code> directory.</p><p>The <code>queryContent</code> composable is a query <em>builder</em>, which gives us a lot of expressiveness in <em>what</em> data we fetch. Let\u2019s see how we\u2019re using this here.</p><p>First, we\u2019re using a <code>where</code> clause to filter out all the articles we don\u2019t want. Sometimes I will add an article before I want it to be \u201Cpublished\u201D to the site.</p><p>I do this by setting the <code>date</code> in the future and then only taking articles before \u201Ctoday\u201D using this clause:</p><div class="language-javascript"><span class="copy"></span><pre><code><span class="line"><span style="color:#FFCB6B;">date</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">$lte</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Date</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Second, some articles are the newsletters I write each week. Others are pieces of content that I want to keep in the <code>articles</code> folder but don\u2019t want to be published.</p><p>I use frontmatter fields to specify this:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#A6ACCD;">newsletter: true  # This is a newsletter</span></span>
<span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#A6ACCD;">ghost: true  # This content won&#39;t appear on the site</span></span>
<span class="line"><span style="color:#A6ACCD;">---</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Third, we use the <code>only</code> clause to grab just the fields we need. By default, the <code>queryContent</code> method returns a lot of data, including the entire piece of content itself, so this can make a big difference in payload size.</p><p>Lastly, as you have probably guessed, we have a <code>sort</code> clause to sort the articles so the most recent ones appear last.</p><p>The <code>queryContent</code> composable has more options than this, which you can read about on <a href="https://content.nuxtjs.org/api/composables/query-content/" target="_blank" rel="noopener noreferrer">the docs</a>.</p><h2 id="\u{1F4DC}-the-101-guide-to-script-setup-in-vue-3" tabindex="-1">\u{1F4DC} The 101 guide to Script Setup in Vue 3 <a class="header-anchor" href="#\u{1F4DC}-the-101-guide-to-script-setup-in-vue-3" aria-hidden="true">#</a></h2><p>Using <code>script setup</code> in Vue 3 greatly reduces boiler-plate code.</p><p>But there <em>are</em> some differences between using this approach and setup method approach.</p><p>This article by Anthony Konstantinidis covers all of the things you need to know to get started with <code>script setup</code> in Vue 3.</p><p>Read it here: <a href="https://vuedose.tips/the-101-guide-to-script-setup-in-vue-3" target="_blank" rel="noopener noreferrer">The 101 guide to Script Setup in Vue 3</a></p><h2 id="\u{1F4AC}-the-absence-of-bugs" tabindex="-1">\u{1F4AC} The absence of bugs <a class="header-anchor" href="#\u{1F4AC}-the-absence-of-bugs" aria-hidden="true">#</a></h2><p>&quot;Testing can only prove the presence of bugs, not their absence.&quot; \u2014Edsger W. Dijkstra</p><h2 id="\u{1F9E0}-spaced-repetition-my-favourite-git-commands" tabindex="-1">\u{1F9E0} Spaced-repetition: My favourite git commands <a class="header-anchor" href="#\u{1F9E0}-spaced-repetition-my-favourite-git-commands" aria-hidden="true">#</a></h2><p><strong>The best way to commit something to long-term memory is to periodically review it, gradually increasing the time between reviews \u{1F468}\u200D\u{1F52C}</strong></p><p><strong>Actually remembering these tips is much more useful than just a quick distraction, so here&#39;s a tip from a couple weeks ago to jog your memory.</strong></p><p>Here are a few of my favourite git commands (is it weird to have favourite git commands?):</p><p>I&#39;m often jumping back and forth between different branches, and typing is annoying:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># Checkout the previous branch</span></span>
<span class="line"><span style="color:#A6ACCD;">git checkout -</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Sometimes I add new files, then realize I don&#39;t actually need them:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># Remove any files not tracked by git</span></span>
<span class="line"><span style="color:#A6ACCD;">git clean</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Or I completely broke everything and need to start over:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># Undo all changes to git and the working directory,</span></span>
<span class="line"><span style="color:#A6ACCD;"># going back to the most recent commit</span></span>
<span class="line"><span style="color:#A6ACCD;">git reset --hard</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Github takes all of the commits on your PR branch and combines them into a single one when you merge. But sometimes you want to merge a branch, and you aren&#39;t ready for a PR just yet:</p><div class="language-"><span class="copy"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># Squash all commits from a branch into one commit</span></span>
<span class="line"><span style="color:#A6ACCD;">git merge --squash &lt;branch&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><em>p.s. I also have two courses: <a href="https://michaelnthiessen.com/reusable-components" target="_blank" rel="noopener noreferrer">Reusable Components</a> and <a href="https://michaelnthiessen.com/clean-components" target="_blank" rel="noopener noreferrer">Clean Components</a></em></p><h2 id="\u6765\u6E90" tabindex="-1">\u6765\u6E90 <a class="header-anchor" href="#\u6765\u6E90" aria-hidden="true">#</a></h2><p>\u539F\u6587 <a href="https://michaelnthiessen.com/weekly-073-august-10/" target="_blank" rel="noopener noreferrer">https://michaelnthiessen.com/weekly-073-august-10/</a></p><p>\u672C\u4F5C\u54C1\u91C7\u7528<a href="http://creativecommons.org/licenses/by-sa/4.0/" target="_blank" rel="noopener noreferrer">\u77E5\u8BC6\u5171\u4EAB\u7F72\u540D-\u76F8\u540C\u65B9\u5F0F\u5171\u4EAB 4.0 \u56FD\u9645\u8BB8\u53EF\u534F\u8BAE</a>\u8FDB\u884C\u8BB8\u53EF\u3002</p>`,58),l=[o];function p(r,c,i,h,y,d){return n(),s("div",null,l)}var C=e(t,[["render",p]]);export{D as __pageData,C as default};
